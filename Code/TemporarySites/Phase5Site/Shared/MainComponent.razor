@using BasicBlazorLibrary.Components.CssGrids
@using BasicBlazorLibrary.Components.Layouts.Simple
@using BasicBlazorLibrary.Components.Modals
@if (DataContext.AttackUnitStringList.Count == 0)
{
    <div>Loading.....</div>
    return;
}
<LeftOverLayoutComponent>
    <MainContent>
        <GridContainer RowGap="2px" Rows="auto 1fr auto 1fr"
                       ColumnGap="2px"
                       Width="100%"
                       Height="100%"
                       Columns="auto auto auto 3fr 1fr">
            <GridItem>
                <ComboBoxStringList ItemList="DataContext.AttackUnitStringList"
                                    ComboEnterPressed="ChooseAttackUnitAsync"
                                    @bind-Value="DataContext.AttackUnitRequested"
                                    Style="_style"
                                    @ref="_firstAttackCombo"
                                    Placeholder="Attack Units" />
            </GridItem>
            <GridItem Column="2">
                <ComboBoxStringList ItemList="DataContext.AttackCivilizations"
                                    ComboEnterPressed="() => FilterAttackCivAsync()"
                                    @bind-Value="DataContext.AttackCivilizationRequested"
                                    @ref="_secondAttackCombo"
                                    Style="_style"
                                    Placeholder="Attack Civilization" />
            </GridItem>
            <GridItem Column="3">
                <ComboBoxStringList ItemList="DataContext.AttackUpgradeList"
                                    ComboEnterPressed="() => DataContext.FilterAttackBaseChampion()"
                                    @bind-Value="DataContext.AttackBaseString"
                                    @ref="_thirdAttackCombo"
                                    Style="_style"
                                    Placeholder="Attack Upgrade" />
            </GridItem>
            <GridItem Column="4">
                @if (DataContext.CanShowAttackTechs && DataContext.AttackUnitRequested != "")
                {
                    <ImageButtonComponent MainSource="/ShowAttackTechs.png"
                                          HoverSource="/ShowAttackTechsHover.png"
                                          OnClick="OpenAttackTechs"
                                          />
                }
            </GridItem>
            <GridItem Row="2" ColumnSpan="4" Style="overflow: auto">

                @if (DataContext.UnitAttackList.Count > 0)
                {
                    <AttackUnitListComponent Units="DataContext.UnitAttackList" />
                }
            </GridItem>
            <GridItem Row="2" Column="5" Style="overflow: auto">
                @if (TechContainer.AttackSelectedTechList.Count > 0)
                {
                    <b>Attack Techs Selected:</b>
                    @foreach (var tech in TechContainer.AttackSelectedTechList)
                    {
                        <div>@tech.Name</div>
                    }
                }
            </GridItem>
            <GridItem Row="3">
                <ComboBoxStringList ItemList="DataContext.DefenseUnitStringList"
                                    ComboEnterPressed="ChooseDefenseUnitAsync"
                                    @bind-Value="DataContext.DefenseUnitRequested"
                                    Style="_style"
                                    Placeholder="Defense Units" />
            </GridItem>
            <GridItem Row="3" Column="2">
                <ComboBoxStringList ItemList="DataContext.DefenseCivilizations"
                                    ComboEnterPressed="() => FilterDefenseCivAsync()"
                                    @bind-Value="DataContext.DefenseCivilizationRequested"
                                    @ref="_secondDefenseCombo"
                                    Style="_style"
                                    Placeholder="Defense Civilization" />
            </GridItem>
            <GridItem Row="3" Column="3">
                <ComboBoxStringList ItemList="DataContext.DefenseUpgradeList"
                                    ComboEnterPressed="() => DataContext.FilterDefenseBaseChampion()"
                                    @bind-Value="DataContext.DefenseBaseString"
                                    @ref="_thirdDefenseCombo"
                                    Style="_style"
                                    Placeholder="Defense Upgrade" />
            </GridItem>
            <GridItem Row="3" Column="4">
                @if (DataContext.CanShowDefenseTechs && DataContext.DefenseUnitRequested != "")
                {
                <ImageButtonComponent MainSource="/ShowDefenseTechs.png"
                                      HoverSource="/ShowDefenseTechsHover.png"
                                      OnClick="OpenDefenseTechs" />
                }
            </GridItem>
            <GridItem Row="4" ColumnSpan="4" Style="overflow: auto">
                @if (DataContext.UnitDefenseList.Count > 0)
                {
                    <DefenseUnitListComponent Units="DataContext.UnitDefenseList" />
                }
            </GridItem>
            <GridItem Row="4" Column="5" Style="overflow: auto">
                @if (TechContainer.DefenseSelectedTechList.Count > 0)
                {
                    <b>Defense Techs Selected:</b>
                    @foreach (var tech in TechContainer.DefenseSelectedTechList)
                    {
                        <div>@tech.Name</div>
                    }
                }
            </GridItem>
        </GridContainer>
    </MainContent>
    <BottomContent>

        <ImageButtonComponent MainSource="/clear.png"
                              HoverSource="/clearHover.png"
                              OnClick="ClearAsync" />

       
        @* 
        because of the techs, can't do the full reports anymore.
            i have the code in previous phases so if needed, then can rethink.
        *@
        

        @if (DataContext.UnitAttackList.Count > 0 && DataContext.UnitDefenseList.Count > 0)
        {
            <ImageButtonComponent MainSource="/Run_Button.png"
                                  MarginLeft="50px"
                                  HoverSource="/Run_Button_Hover.png"
                                  OnClick="() => RunReportAsync()"
                                  />
            @*<button style="margin-left: 2px;" @onclick="() => RunReportAsync()" class="btn btn-primary">
                Run
            </button>*@
            @if (_resultsList.Count > 0)
            {
                <PopupCenteredFull Visible="true"
                                   CloseButtonClick="() => CloseReport()"
                                   ShowCloseButton="true"
                                   BackgroundImage="BackgroundRunPopup.png"
                                   DisableBackgroundClick="false"
                                   Scrollable="true"
                                   Width="1200px"
                                   Height="600px">
                    <AttackResultsUnitListComponent Units="_resultsList" />
                </PopupCenteredFull>
            }
        }


        @if (_showAttackTechs || _showDefenseTechs)
        {
            <PopupCenteredFull Visible="true"
                               ShowCloseButton="false"
                               DisableBackgroundClick="true"
                               Scrollable="true"
                               ShowHeader="false"
                               BackgroundImage="BackgroundTechPopup.png"
                               Width="1200px"
                               Height="600px">
                <Content>
                    @if (_showAttackTechs)
                    {
                        <AttackTechListComponent />
                    }
                    else
                    {
                        <DefenseTechListComponent />
                    }
                </Content>
                <FooterTemplate>
                    @if (_showAttackTechs)
                    {
                        <AttackTechPortal
                                          OnSave="SaveAttackTechs"
                                          OnCancel="CancelAttackTechs" />
                    }
                    else
                    {
                        <DefenseTechPortal
                                           OnSave="SaveDefenseTechs"
                                           OnCancel="CancelDefenseTechs"
                                           />
                    }
                </FooterTemplate>
            </PopupCenteredFull>
        }


        @* here will have the run button.   only can show up if you have attack list and defense list *@
    </BottomContent>
</LeftOverLayoutComponent>